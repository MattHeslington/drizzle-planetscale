import { int, mysqlTable, varchar, json, decimal, datetime, tinyint } from "drizzle-orm/mysql-core";
import { InferModel } from 'drizzle-orm';

export const listings = mysqlTable('listings', {
    id: int('id').autoincrement().primaryKey(),
    createdAt: datetime('created_at'),
    ownerId: int('owner_id').references(() => users.id),
    address: varchar('address', { length: 255 }),
    amenitiesSpecial: json('amenities_special'), // Assuming you're using a MySQL library that supports JSON data type
    amenitiesStandard: json('amenities_standard'),
    basePrice: decimal('base_price', { precision: 10, scale: 2 }),
    bathrooms: int('bathrooms'),
    beds: int('beds'),
    bedrooms: int('bedrooms'),
    bookings: json('bookings'),
    bookingType: varchar('booking_type', { length: 255 }),
    cancellationPolicy: varchar('cancellation_policy', { length: 255 }),
    checkinTime: varchar('checkin_time', { length: 10 }),
    checkoutTime: varchar('checkout_time', { length: 10 }),
    cleaningFee: decimal('cleaning_fee', { precision: 10, scale: 2 }),
    complete: tinyint('complete'),
    coordsLat: decimal('coords_lat', { precision: 10, scale: 7 }),
    coordsLng: decimal('coords_lng', { precision: 10, scale: 7 }),
    description: varchar('description', { length: 255 }),
    eventsAllowed: tinyint('events_allowed'),
    featured: tinyint('featured'),
    guests: int('guests'),
    highlights: json('highlights'),
    hostingType: varchar('hosting_type', { length: 255 }),
    icalFile: varchar('ical_file', { length: 255 }),
    icalLinks: json('ical_links'),
    localeOverview: varchar('locale_overview', { length: 255 }),
    location: json('location'),
    locality: varchar('locality', { length: 255 }),
    locationType: varchar('location_type', { length: 255 }),
    minimumNights: int('minimum_nights'),
    name: varchar('name', { length: 255 }),
    onOffer: tinyint('on_offer'),
    placeType: varchar('place_type', { length: 255 }),
    parkingAvailable: tinyint('parking_available'),
    pricingDate: datetime('pricing_date'),
    pricingPeriodName: varchar('pricing_period_name', { length: 255 }),
    pricingPeriodPrice: decimal('pricing_period_price', { precision: 10, scale: 2 }),
    pricingPeriodNights: int('pricing_period_nights'),
    pricingActive: tinyint('pricing_active'),
    slug: varchar('slug', { length: 255 }),
    smokingAllowed: tinyint('smoking_allowed'),
    spaceType: varchar('space_type', { length: 255 }),
    systemPublished: tinyint('system_published'),
    title: varchar('title', { length: 255 }),
    unavailableDatesStartDate: datetime('unavailable_dates_start_date'),
    unavailableDatesEndDate: datetime('unavailable_dates_end_date'),
    unavailableDatesType: varchar('unavailable_dates_type', { length: 255 }),
    userPublished: tinyint('user_published'),
});

export const users = mysqlTable('users', {
    id: int('id').autoincrement().primaryKey(),
    createdAt: datetime('created_at'),
    score: int('score').notNull().default(0),
    email: varchar('email', { length: 255 }).notNull(),
    name: varchar('name', { length: 255 }).notNull(),
    firstName: varchar('first_name', { length: 255 }).notNull(),
    username: varchar('username', { length: 255 }),
    photoUrl: varchar('photo_url', { length: 255 }),
    token: varchar('token', { length: 255 }),
    active: tinyint('active').notNull().default(1),
    isOwner: tinyint('is_owner').notNull().default(0),
    showHelp: tinyint('show_help').notNull().default(1),
    ownerBio: varchar('owner_bio', { length: 255 }),
    coverImage: varchar('cover_image', { length: 255 }),
    currency: varchar('currency', { length: 255 }),
    sendEmails: tinyint('send_emails').notNull().default(0),
    phone: int('phone'),
    phoneConfirmed: tinyint('phone_confirmed').notNull().default(0),
    goodPerson: tinyint('good_person').notNull().default(0),
});

type Listing = InferModel<typeof listings, "select">;